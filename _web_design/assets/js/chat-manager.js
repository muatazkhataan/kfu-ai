/**
 * ุฅุฏุงุฑุฉ ุงููุญุงุฏุซุงุช - ูุณุงุนุฏ ููู
 * ูุญุชูู ุนูู ุฌููุน ูุธุงุฆู ุฅุฏุงุฑุฉ ุงููุญุงุฏุซุงุช
 */

class ChatManager {
    constructor() {
        this.currentChatId = null;
        this.isTyping = false;
        this.chats = new Map();
        this.init();
    }

    // ุชููุฆุฉ ุงููุธุงู
    init() {
        this.loadDefaultChats();
        this.bindEvents();
        this.initializeNewChat();
    }

    // ุชุญููู ุงููุญุงุฏุซุงุช ุงูุงูุชุฑุงุถูุฉ
    loadDefaultChats() {
        const defaultChats = [
            {
                id: 'chat1',
                title: 'ูุณุงุนุฏุฉ ูู ุงูุจุฑูุฌุฉ',
                icon: ' fa-duotone fa-code',
                preview: 'ุฃุญุชุงุฌ ูุณุงุนุฏุฉ ูู ุญู ูุดููุฉ ุจุฑูุฌูุฉ...',
                folder: 'programming'
            },
            {
                id: 'chat2',
                title: 'ูุฑุงุฌุนุฉ ููุงูู ุงูุจูุงูุงุช',
                icon: ' fa-duotone fa-sitemap',
                preview: 'ุดุฑุญ ุงูุฃุดุฌุงุฑ ุงูุซูุงุฆูุฉ ูุงูุจุญุซ...',
                folder: 'datastructures'
            },
            {
                id: 'chat3',
                title: 'ุงูููุงุนูุฏ ุงูุฃูุงุฏูููุฉ',
                icon: ' fa-duotone fa-calendar',
                preview: 'ูุชู ููุนุฏ ุงูุชุณุฌูู ูููุตู ุงููุงุฏูุ',
                folder: 'academic'
            },
            {
                id: 'chat4',
                title: 'ูุตุงุฆุญ ุงูุจุฑูุฌุฉ',
                icon: ' fa-duotone fa-brain',
                preview: 'ููู ุฃุญุณู ููุงุฑุงุชู ูู ุงูุจุฑูุฌุฉุ',
                folder: 'academic'
            }
        ];

        defaultChats.forEach(chat => {
            this.chats.set(chat.id, chat);
        });
    }

    // ุฑุจุท ุงูุฃุญุฏุงุซ
    bindEvents() {
        const chatInput = document.getElementById("chatInput");
        const sendBtn = document.getElementById("sendBtn");

        // ุชุบููุฑ ุญุฌู textarea ุชููุงุฆูุงู
        chatInput.addEventListener("input", () => {
            chatInput.style.height = "auto";
            chatInput.style.height = Math.min(chatInput.scrollHeight, 120) + "px";
            sendBtn.disabled = chatInput.value.trim() === "";
        });

        // ุฅุฑุณุงู ุงูุฑุณุงูุฉ ุนูุฏ ุงูุถุบุท ุนูู Enter
        chatInput.addEventListener("keydown", (e) => {
            if (e.key === "Enter" && !e.shiftKey) {
                e.preventDefault();
                this.sendMessage();
            }
        });

        // ุฅุบูุงู ุงูููุงุฆู ุงูููุณุฏูุฉ ุนูุฏ ุงูููุฑ ุฎุงุฑุฌูุง
        document.addEventListener("click", (e) => {
            if (e.target && e.target.closest && !e.target.closest('.chat-item-actions')) {
                console.log('๐ฑ๏ธ ุงูููุฑ ุฎุงุฑุฌ chat-item-actionsุ ุฅุบูุงู ุงูููุงุฆู');
                this.closeAllChatDropdowns();
            }
        });
    }

    // ุจุฏุก ูุญุงุฏุซุฉ ุฌุฏูุฏุฉ
    startNewChat() {
        this.currentChatId = "new-" + Date.now();
        document.getElementById("chatTitle").textContent = "ูุญุงุฏุซุฉ ุฌุฏูุฏุฉ";
        document.getElementById("welcomeMessage").style.display = "block";
        document.getElementById("messagesContainer").style.display = "none";
        document.getElementById("chatInput").value = "";
        document.getElementById("sendBtn").disabled = true;

        // ุฅุฒุงูุฉ ุงููุฆุฉ ุงููุดุทุฉ ูู ุฌููุน ุงูุนูุงุตุฑ
        document.querySelectorAll(".chat-item, .folder-item").forEach((item) => {
            item.classList.remove("active");
        });

        // ุฅุนุงุฏุฉ ุชุนููู ุฑุณุงูุฉ ุงูุชุฑุญูุจ
        const welcomeTitle = document.querySelector('.welcome-title');
        const welcomeText = document.querySelector('.welcome-text');
        welcomeTitle.textContent = 'ูุฑุญุจุงู ุจู ูู ูุณุงุนุฏ ููู!';
        welcomeText.textContent = 'ุฃูุง ูุณุงุนุฏู ุงูุฐูู. ูููููู ูุณุงุนุฏุชู ูู ุงููุฐุงูุฑุฉุ ุงูุดุคูู ุงูุฃูุงุฏูููุฉุ ูุญู ุงููุดุงูู ุงูุฏุฑุงุณูุฉ.';
    }

    // ุชููุฆุฉ ูุญุงุฏุซุฉ ุฌุฏูุฏุฉ
    initializeNewChat() {
        this.startNewChat();
    }

    // ุชุญููู ูุญุงุฏุซุฉ
    loadChat(chatId, event) {
        this.currentChatId = chatId;
        document.getElementById("welcomeMessage").style.display = "none";
        document.getElementById("messagesContainer").style.display = "block";

        // ุฅุฒุงูุฉ ุงููุฆุฉ ุงููุดุทุฉ ูู ุฌููุน ุงูุนูุงุตุฑ
        document.querySelectorAll(".chat-item, .folder-item").forEach((item) => {
            item.classList.remove("active");
        });

        // ุฅุถุงูุฉ ุงููุฆุฉ ุงููุดุทุฉ ูููุญุงุฏุซุฉ ุงููุญุฏุฏุฉ
        const chatItem = event ? event.target.closest(".chat-item") :
            document.querySelector(`[onclick*="loadChat('${chatId}')"]`);

        if (chatItem) {
            chatItem.classList.add("active");

            // ุชุญุฏูุซ ุนููุงู ุงููุญุงุฏุซุฉ
            const chatTitle = chatItem.querySelector(".chat-item-title").textContent;
            document.getElementById("chatTitle").textContent = chatTitle;
        }
    }

    // ุฅุฑุณุงู ุฑุณุงูุฉ
    sendMessage() {
        const chatInput = document.getElementById("chatInput");
        const message = chatInput.value.trim();

        if (!message || this.isTyping) return;

        // ุฅุฎูุงุก ุฑุณุงูุฉ ุงูุชุฑุญูุจ ุฅุฐุง ูุงูุช ุธุงูุฑุฉ
        document.getElementById("welcomeMessage").style.display = "none";
        document.getElementById("messagesContainer").style.display = "block";

        // ุฅุถุงูุฉ ุฑุณุงูุฉ ุงููุณุชุฎุฏู
        this.addMessage(message, true);

        // ูุณุญ ุงูุฅุฏุฎุงู
        chatInput.value = "";
        chatInput.style.height = "auto";
        document.getElementById("sendBtn").disabled = true;

        // ุฅุธูุงุฑ ูุคุดุฑ ุงููุชุงุจุฉ
        this.showTyping();

        // ูุญุงูุงุฉ ุฑุฏ ุงูุฐูุงุก ุงูุงุตุทูุงุนู
        setTimeout(() => {
            this.hideTyping();
            const responses = [
                `ุฃููู ุณุคุงูู! ุฏุนูู ุฃุณุงุนุฏู ูู ุฐูู. ูููููู ุชูุฏูู <strong>ุดุฑุญ ููุตู</strong> ุฃู ุญู ูููุดููุฉ ุงูุชู ุชูุงุฌููุง.<br><br>
                ๐ก <em>ูุตุงุฆุญ ุฅุถุงููุฉ:</em><br>
                โข ุฑุงุฌุน ุงููุงุฏุฉ ุจุนูุงูุฉ<br>
                โข ุงุณุชุฎุฏู <code>ุฃูุซูุฉ ุนูููุฉ</code> ููููู<br>
                โข ูุง ุชุชุฑุฏุฏ ูู ุงูุณุคุงู ุนู ุงูุชูุงุตูู`,

                `ูุฐุง ุณุคุงู ููุชุงุฒ! ุฅููู <strong>ุงูุฅุฌุงุจุฉ ุงูุชูุตูููุฉ</strong> ุงูุชู ูุฏ ุชุณุงุนุฏู ูู ููู ุงูููุถูุน ุจุดูู ุฃูุถู.<br><br>
                ๐ <em>ุงูุฎุทูุงุช ุงููุทููุจุฉ:</em><br>
                โข ููู ุงูุฃุณุงุณูุงุช ุฃููุงู<br>
                โข ุชุทุจูู ุงูููุงููู ุนูููุงู<br>
                โข ูุฑุงุฌุนุฉ ุงููุชุงุฆุฌ`,

                `ูููููู ูุณุงุนุฏุชู ูู ูุฐุง ุงูููุถูุน. ุฅููู ูุง ุชุญุชุงุฌ ูุนุฑูุชู ูุน ุจุนุถ <strong>ุงูุฃูุซูุฉ ุงูุนูููุฉ</strong>.<br><br>
                ๐ง <em>ุงูุฃุฏูุงุช ุงููุทููุจุฉ:</em><br>
                โข <code>ูุญุฑุฑ ุงููุตูุต</code><br>
                โข <code>ูุชุตูุญ ุงูููุจ</code><br>
                โข <code>ุฃุฏูุงุช ุงูุชุทููุฑ</code>`,

                `ุดูุฑุงู ูุณุคุงูู! ูุฐุง ูุง ูููููู ุฅุฎุจุงุฑู ุจู ุจูุงุกู ุนูู <strong>ุฎุจุฑุชู ูู ุงููุฌุงู ุงูุฃูุงุฏููู</strong>.<br><br>
                ๐ <em>ุงููุฌุงูุงุช ุงููุชุงุญุฉ:</em><br>
                โข ุงูุจุฑูุฌุฉ ูุงูุชุทููุฑ<br>
                โข ุงูุฑูุงุถูุงุช ูุงูุนููู<br>
                โข ุงูุดุคูู ุงูุฃูุงุฏูููุฉ`,

                `ุฃุนุชูุฏ ุฃู ูุฐุง ูุง ุชุจุญุซ ุนูู. ุฅููู <strong>ุงูุชูุงุตูู ุงููุงููุฉ</strong> ูุน ุจุนุถ ุงููุตุงุฆุญ ุงูุฅุถุงููุฉ.<br><br>
                โญ <em>ูุตุงุฆุญ ูููุฉ:</em><br>
                โข ุงูุฑุฃ ุงูุชุนูููุงุช ุจุนูุงูุฉ<br>
                โข ุฌุฑุจ ุงูุญููู ุฎุทูุฉ ุจุฎุทูุฉ<br>
                โข ุงุทูุจ ุงููุณุงุนุฏุฉ ุนูุฏ ุงูุญุงุฌุฉ`
            ];

            const randomResponse = responses[Math.floor(Math.random() * responses.length)];
            this.addMessageWithTyping(randomResponse, false, 25);
        }, 2000);
    }

    // ุฅุถุงูุฉ ุฑุณุงูุฉ
    addMessage(content, isUser = false) {
        const messagesContainer = document.getElementById("messagesContainer");
        const welcomeMessage = document.getElementById("welcomeMessage");

        // ุฅุฎูุงุก ุฑุณุงูุฉ ุงูุชุฑุญูุจ
        if (welcomeMessage) {
            welcomeMessage.style.display = 'none';
        }

        // ุฅุธูุงุฑ ุญุงููุฉ ุงูุฑุณุงุฆู
        if (messagesContainer) {
            messagesContainer.style.display = 'block';
        }

        const messageDiv = document.createElement("div");
        messageDiv.className = `message ${isUser ? "user" : "assistant"}`;

        if (isUser) {
            // ุฑุณุงุฆู ุงููุณุชุฎุฏู - ูุน message-actions ูุญุฏูุฏุฉ
            messageDiv.innerHTML = `
                <div class="message-avatar">
                    <i class="fa-duotone fa-user"></i>
                </div>
                <div class="message-content">
                    <p class="mb-0">${content}</p>
                    <div class="message-actions">
                        <button class="message-action-btn" onclick="chatManager.copyMessage(this)" title="ูุณุฎ ุงููุญุชูู">
                            <i class="fa-regular fa-copy"></i>
                        </button>
                        <button class="message-action-btn" onclick="chatManager.editMessage(this)" title="ุชุญุฑูุฑ ุงูุฑุณุงูุฉ">
                            <i class="fa-regular fa-edit"></i>
                        </button>
                    </div>
                </div>
            `;
        } else {
            // ุฑุณุงุฆู ุงููุณุงุนุฏ - ูุน message-actions
            messageDiv.innerHTML = `
                <div class="message-avatar">
                    <i class="kfu-icon kfu-icon-primary"></i>
                </div>
                <div class="message-content">
                    <p class="mb-0">${content}</p>
                    <div class="message-actions">
                        <button class="message-action-btn" onclick="chatManager.copyMessage(this)" title="ูุณุฎ ุงููุญุชูู">
                            <i class="fa-regular fa-copy"></i>
                        </button>
                        <button class="message-action-btn" onclick="chatManager.likeMessage(this)" title="ุฑุฏ ุฌูุฏ">
                            <i class="fa-solid fa-thumbs-up"></i>
                        </button>
                        <button class="message-action-btn" onclick="chatManager.dislikeMessage(this)" title="ุฑุฏ ุณูุก">
                            <i class="fa-regular fa-thumbs-down"></i>
                        </button>
                        <button class="message-action-btn" onclick="chatManager.shareMessage(this)" title="ูุดุงุฑูุฉ">
                            <i class="fa-regular fa-share"></i>
                        </button>
                        <button class="message-action-btn" onclick="chatManager.retryMessage(this)" title="ุญุงูู ูุฑุฉ ุฃุฎุฑู">
                            <i class="fa-regular fa-redo"></i>
                        </button>
                        <div class="dropdown">
                            <button class="message-action-btn dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false" title="ุงููุฒูุฏ">
                                <i class="fa-regular fa-ellipsis-v"></i>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end">
                                <li><a class="dropdown-item" href="#" onclick="chatManager.branchInNewChat(this)">
                                    <i class="fa-regular fa-code-branch me-2"></i>ูุฑุน ูู ุฏุฑุฏุดุฉ ุฌุฏูุฏุฉ
                                </a></li>
                                <li><a class="dropdown-item" href="#" onclick="chatManager.readAloud(this)">
                                    <i class="fa-regular fa-volume-up me-2"></i>ูุฑุงุกุฉ ุจุตูุช
                                </a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            `;
        }

        messagesContainer.appendChild(messageDiv);
        this.scrollToBottom();
    }

    // ุฅุถุงูุฉ ุฑุณุงูุฉ ูุน ุชุฃุซูุฑ ุงููุชุงุจุฉ
    addMessageWithTyping(content, isUser = false, speed = 30) {
        const messagesContainer = document.getElementById("messagesContainer");
        const welcomeMessage = document.getElementById("welcomeMessage");

        // ุฅุฎูุงุก ุฑุณุงูุฉ ุงูุชุฑุญูุจ
        if (welcomeMessage) {
            welcomeMessage.style.display = 'none';
        }

        // ุฅุธูุงุฑ ุญุงููุฉ ุงูุฑุณุงุฆู
        if (messagesContainer) {
            messagesContainer.style.display = 'block';
        }

        const messageDiv = document.createElement("div");
        messageDiv.className = `message ${isUser ? "user" : "assistant"} typing`;

        if (isUser) {
            // ุฑุณุงุฆู ุงููุณุชุฎุฏู - ูุน message-actions ูุญุฏูุฏุฉ
            messageDiv.innerHTML = `
                <div class="message-avatar">
                    <i class="fa-duotone fa-user"></i>
                </div>
                <div class="message-content">
                    <div class="typing-effect-container">
                        <div class="mb-0"></div>
                    </div>
                    <div class="message-actions">
                        <button class="message-action-btn" onclick="chatManager.copyMessage(this)" title="ูุณุฎ ุงููุญุชูู">
                            <i class="fa-regular fa-copy"></i>
                        </button>
                        <button class="message-action-btn" onclick="chatManager.editMessage(this)" title="ุชุญุฑูุฑ ุงูุฑุณุงูุฉ">
                            <i class="fa-regular fa-edit"></i>
                        </button>
                    </div>
                </div>
            `;
        } else {
            // ุฑุณุงุฆู ุงููุณุงุนุฏ - ูุน message-actions
            messageDiv.innerHTML = `
                <div class="message-avatar">
                    <i class="kfu-icon kfu-icon-primary"></i>
                </div>
                <div class="message-content">
                    <div class="typing-effect-container">
                        <div class="mb-0"></div>
                    </div>
                    <div class="message-actions">
                        <button class="message-action-btn" onclick="chatManager.copyMessage(this)" title="ูุณุฎ ุงููุญุชูู">
                            <i class="fa-regular fa-copy"></i>
                        </button>
                        <button class="message-action-btn" onclick="chatManager.likeMessage(this)" title="ุฑุฏ ุฌูุฏ">
                            <i class="fa-regular fa-thumbs-up"></i>
                        </button>
                        <button class="message-action-btn" onclick="chatManager.dislikeMessage(this)" title="ุฑุฏ ุณูุก">
                            <i class="fa-regular fa-thumbs-down"></i>
                        </button>
                        <button class="message-action-btn" onclick="chatManager.shareMessage(this)" title="ูุดุงุฑูุฉ">
                            <i class="fa-regular fa-share"></i>
                        </button>
                        <button class="message-action-btn" onclick="chatManager.retryMessage(this)" title="ุญุงูู ูุฑุฉ ุฃุฎุฑู">
                            <i class="fa-regular fa-redo"></i>
                        </button>
                        <div class="dropdown">
                            <button class="message-action-btn dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false" title="ุงููุฒูุฏ">
                                <i class="fa-regular fa-ellipsis-v"></i>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end">
                                <li><a class="dropdown-item" href="#" onclick="chatManager.branchInNewChat(this)">
                                    <i class="fa-regular fa-code-branch me-2"></i>ูุฑุน ูู ุฏุฑุฏุดุฉ ุฌุฏูุฏุฉ
                                </a></li>
                                <li><a class="dropdown-item" href="#" onclick="chatManager.readAloud(this)">
                                    <i class="fa-regular fa-volume-up me-2"></i>ูุฑุงุกุฉ ุจุตูุช
                                </a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            `;
        }

        messagesContainer.appendChild(messageDiv);

        // ุงูุญุตูู ุนูู ุนูุตุฑ ุงููุต
        const textElement = messageDiv.querySelector('.typing-effect-container div');

        // ุจุฏุก ุชุฃุซูุฑ ุงููุชุงุจุฉ
        this.typeTextWithHTML(textElement, content, speed).then(() => {
            // ุฅุฒุงูุฉ ููุงุณ typing ุจุนุฏ ุงูุชูุงุก ุงููุชุงุจุฉ
            messageDiv.classList.remove('typing');

            // ุฅุฒุงูุฉ ูุคุดุฑ ุงููุชุงุจุฉ
            const typingContainer = messageDiv.querySelector('.typing-effect-container');
            if (typingContainer) {
                typingContainer.classList.remove('typing-effect-container');
            }

            // ุชูุฑูุฑ ุฅูู ุฃุณูู
            this.scrollToBottom();
        });

        return messageDiv;
    }

    // ุชุฃุซูุฑ ุงููุชุงุจุฉ ุงูุชุฏุฑูุฌูุฉ ูุน ุฏุนู HTML
    typeTextWithHTML(element, text, speed = 30) {
        return new Promise((resolve) => {
            // ุชุญููู ุงููุต ููุตู HTML ุนู ุงููุต ุงูุนุงุฏู
            const parts = this.parseTextWithHTML(text);
            let currentIndex = 0;
            element.innerHTML = '';

            const typeNextPart = () => {
                if (currentIndex >= parts.length) {
                    resolve();
                    return;
                }

                const part = parts[currentIndex];

                if (part.type === 'html') {
                    // ุฅุถุงูุฉ HTML ูุจุงุดุฑุฉ
                    element.innerHTML += part.content;
                    currentIndex++;
                    setTimeout(typeNextPart, speed * 2); // ุชุฃุฎูุฑ ุฃุทูู ููู HTML
                } else {
                    // ูุชุงุจุฉ ุงููุต ุชุฏุฑูุฌูุงู
                    let charIndex = 0;
                    const textInterval = setInterval(() => {
                        if (charIndex < part.content.length) {
                            element.innerHTML += part.content.charAt(charIndex);
                            charIndex++;
                        } else {
                            clearInterval(textInterval);
                            currentIndex++;
                            setTimeout(typeNextPart, speed);
                        }
                    }, speed);
                }
            };

            typeNextPart();
        });
    }

    // ุชุญููู ุงููุต ููุตู HTML ุนู ุงููุต ุงูุนุงุฏู
    parseTextWithHTML(text) {
        const parts = [];
        let currentIndex = 0;

        while (currentIndex < text.length) {
            const htmlStart = text.indexOf('<', currentIndex);

            if (htmlStart === -1) {
                // ูุง ููุฌุฏ ุงููุฒูุฏ ูู HTML tags
                if (currentIndex < text.length) {
                    parts.push({
                        type: 'text',
                        content: text.substring(currentIndex)
                    });
                }
                break;
            }

            // ุฅุถุงูุฉ ุงููุต ูุจู HTML tag
            if (htmlStart > currentIndex) {
                parts.push({
                    type: 'text',
                    content: text.substring(currentIndex, htmlStart)
                });
            }

            // ุงูุนุซูุฑ ุนูู ููุงูุฉ HTML tag
            const htmlEnd = text.indexOf('>', htmlStart);
            if (htmlEnd === -1) {
                // HTML tag ุบูุฑ ููุชููุ ุงุนุชุจุงุฑู ูุต ุนุงุฏู
                parts.push({
                    type: 'text',
                    content: text.substring(htmlStart)
                });
                break;
            }

            // ุฅุถุงูุฉ HTML tag
            parts.push({
                type: 'html',
                content: text.substring(htmlStart, htmlEnd + 1)
            });

            currentIndex = htmlEnd + 1;
        }

        return parts;
    }

    // ุฅุธูุงุฑ ูุคุดุฑ ุงููุชุงุจุฉ
    showTyping() {
        this.isTyping = true;
        document.getElementById("typingIndicator").style.display = "flex";
        this.scrollToBottom();
    }

    // ุฅุฎูุงุก ูุคุดุฑ ุงููุชุงุจุฉ
    hideTyping() {
        this.isTyping = false;
        document.getElementById("typingIndicator").style.display = "none";
    }

    // ุงูุชูุฑูุฑ ุฅูู ุงูุฃุณูู
    scrollToBottom() {
        const chatMessages = document.getElementById("chatMessages");
        chatMessages.scrollTop = chatMessages.scrollHeight;
    }

    // ุทุฑุญ ุณุคุงู (ุงูุฅุฌุฑุงุกุงุช ุงูุณุฑูุนุฉ)
    askQuestion(question) {
        document.getElementById("chatInput").value = question;
        this.sendMessage();
    }

    // ุฅุฑุณุงู ุงูุชุฑุงุญ
    sendSuggestion(suggestion) {
        document.getElementById("chatInput").value = suggestion;
        this.sendMessage();
    }

    // ุฅุฌุฑุงุกุงุช ุงูุฑุณุงุฆู
    copyMessage(button) {
        const messageContentElement = button.closest(".message-content");
        if (!messageContentElement) {
            this.showCopyError(button);
            return;
        }

        // ุงูุจุญุซ ุนู ุงููุต ูู ุนูุงุตุฑ ูุฎุชููุฉ (ุชุฌุงูู message-actions)
        let messageElement = messageContentElement.querySelector("p");
        if (!messageElement) {
            // ุฅุฐุง ูู ูุฌุฏ <p>ุ ูุจุญุซ ูู typing-effect-container
            messageElement = messageContentElement.querySelector(".typing-effect-container div");
        }
        if (!messageElement) {
            // ุฅุฐุง ูู ูุฌุฏ ุฃู ููููุงุ ูุณุชุฎุฏู message-content ููู ูุณุชุจุนุฏ message-actions
            messageElement = messageContentElement;
        }

        // ุงุณุชุฎุฑุงุฌ ุงููุต ูุน ุงุณุชุจุนุงุฏ ูุญุชูู ุงูุฃุฒุฑุงุฑ
        let messageContent = '';

        if (messageElement.tagName === 'P' || messageElement.classList.contains('typing-effect-container')) {
            // ุฅุฐุง ูุงู ุงูุนูุตุฑ ูู <p> ุฃู typing-effect-containerุ ูุฃุฎุฐ ูุตู ูุจุงุดุฑุฉ
            messageContent = messageElement.textContent || messageElement.innerText || '';
        } else {
            // ุฅุฐุง ูุงู message-contentุ ูุณุชุจุนุฏ message-actions
            const tempElement = messageContentElement.cloneNode(true);
            const actionsElement = tempElement.querySelector('.message-actions');
            if (actionsElement) {
                actionsElement.remove();
            }
            messageContent = tempElement.textContent || tempElement.innerText || '';
        }

        // ุชูุธูู ุงููุต ูู ุงููุณุงูุงุช ุงูุฒุงุฆุฏุฉ
        messageContent = messageContent.trim();

        if (!messageContent) {
            this.showCopyError(button);
            return;
        }

        // ูุญุงููุฉ ูุณุฎ ุงููุต ุงูุนุงุฏู ุฃููุงู
        if (navigator.clipboard && window.isSecureContext) {
            // ุงุณุชุฎุฏุงู Clipboard API ุงูุญุฏูุซ
            navigator.clipboard.writeText(messageContent).then(() => {
                this.showCopySuccess(button);
            }).catch(() => {
                // Fallback: ุงุณุชุฎุฏุงู ุงูุทุฑููุฉ ุงููุฏููุฉ
                this.fallbackCopyToClipboard(messageContent, button);
            });
        } else {
            // Fallback ูููุชุตูุญุงุช ุงููุฏููุฉ ุฃู ุบูุฑ ุงูุขููุฉ
            this.fallbackCopyToClipboard(messageContent, button);
        }
    }

    // ุทุฑููุฉ ุจุฏููุฉ ูููุณุฎ ูููุชุตูุญุงุช ุงููุฏููุฉ
    fallbackCopyToClipboard(text, button) {
        const textArea = document.createElement("textarea");
        textArea.value = text;
        textArea.style.position = "fixed";
        textArea.style.left = "-999999px";
        textArea.style.top = "-999999px";
        document.body.appendChild(textArea);
        textArea.focus();
        textArea.select();

        try {
            const successful = document.execCommand('copy');
            if (successful) {
                this.showCopySuccess(button);
            } else {
                this.showCopyError(button);
            }
        } catch (err) {
            this.showCopyError(button);
        }

        document.body.removeChild(textArea);
    }

    // ุฅุธูุงุฑ ุชุฃููุฏ ุงููุฌุงุญ
    showCopySuccess(button) {
        const originalIcon = button.innerHTML;
        const originalTitle = button.getAttribute('title');

        button.innerHTML = '<i class="fa-duotone fa-check text-success"></i>';
        button.setAttribute('title', 'ุชู ุงููุณุฎ!');
        button.style.color = 'var(--bs-success)';

        setTimeout(() => {
            button.innerHTML = originalIcon;
            button.setAttribute('title', originalTitle);
            button.style.color = '';
        }, 1500);
    }

    // ุฅุธูุงุฑ ุฑุณุงูุฉ ุฎุทุฃ
    showCopyError(button) {
        const originalIcon = button.innerHTML;
        const originalTitle = button.getAttribute('title');

        button.innerHTML = '<i class="fa-duotone fa-times text-danger"></i>';
        button.setAttribute('title', 'ูุดู ุงููุณุฎ');
        button.style.color = 'var(--bs-danger)';

        setTimeout(() => {
            button.innerHTML = originalIcon;
            button.setAttribute('title', originalTitle);
            button.style.color = '';
        }, 1500);
    }

    likeMessage(button) {
        const icon = button.querySelector("i");
        if (icon.classList.contains("fa-thumbs-up")) {
            icon.classList.remove("fa-thumbs-up");
            icon.classList.add("fa-thumbs-up", "text-primary");
        } else {
            icon.classList.remove("text-primary");
        }
    }

    dislikeMessage(button) {
        const icon = button.querySelector("i");
        if (icon.classList.contains("fa-thumbs-down")) {
            icon.classList.remove("fa-thumbs-down");
            icon.classList.add("fa-thumbs-down", "text-danger");
        } else {
            icon.classList.remove("text-danger");
        }
    }

    shareMessage(button) {
        const messageContent = button.closest(".message-content").querySelector("p").textContent;
        if (navigator.share) {
            navigator.share({
                title: "ุฑุณุงูุฉ ูู ูุณุงุนุฏ ููู",
                text: messageContent
            });
        } else {
            // Fallback: ูุณุฎ ุฅูู ุงูุญุงูุธุฉ
            navigator.clipboard.writeText(messageContent).then(() => {
                // ุฅุธูุงุฑ ุชุฃููุฏ
                const originalIcon = button.innerHTML;
                button.innerHTML = '<i class="fa-duotone fa-check"></i>';
                setTimeout(() => {
                    button.innerHTML = originalIcon;
                }, 1000);
            });
        }
    }

    retryMessage(button) {
        const messageElement = button.closest(".message");
        const messageContent = messageElement.querySelector(".message-content p").textContent;

        // ุฅุฒุงูุฉ ุงูุฑุณุงูุฉ ุงูุญุงููุฉ
        messageElement.remove();

        // ุฅุนุงุฏุฉ ุฅุฑุณุงู ุงูุฑุณุงูุฉ
        this.addMessageWithTyping(messageContent, false, 30);
    }

    branchInNewChat(link) {
        const messageContent = link.closest(".message").querySelector(".message-content p").textContent;

        // ุฅูุดุงุก ูุญุงุฏุซุฉ ุฌุฏูุฏุฉ
        this.startNewChat();

        // ุฅุถุงูุฉ ุงูุฑุณุงูุฉ ุฅูู ุงููุญุงุฏุซุฉ ุงูุฌุฏูุฏุฉ
        setTimeout(() => {
            this.addMessage(messageContent, true);
            this.addMessageWithTyping("ุชู ุฅูุดุงุก ูุฑุน ุฌุฏูุฏ ูู ูุฐู ุงูุฑุณุงูุฉ. ููู ูููููู ูุณุงุนุฏุชูุ", false, 30);
        }, 500);
    }

    readAloud(link) {
        const messageContent = link.closest(".message").querySelector(".message-content p").textContent;

        if ('speechSynthesis' in window) {
            // ุฅููุงู ุฃู ูุฑุงุกุฉ ุณุงุจูุฉ
            speechSynthesis.cancel();

            const utterance = new SpeechSynthesisUtterance(messageContent);
            utterance.lang = 'ar-SA';
            utterance.rate = 0.8;
            utterance.pitch = 1;

            speechSynthesis.speak(utterance);

            // ุฅุธูุงุฑ ุชุฃููุฏ
            const originalIcon = link.querySelector("i");
            const originalText = link.textContent;
            link.innerHTML = '<i class="fa-duotone fa-stop me-2"></i>ุฅููุงู';

            utterance.onend = () => {
                link.innerHTML = originalText;
            };
        } else {
            alert("ุนุฐุฑุงูุ ุงููุชุตูุญ ูุง ูุฏุนู ูุฑุงุกุฉ ุงููุต ุจุตูุช ุนุงูู.");
        }
    }

    // ุฅุฌุฑุงุกุงุช ุงููุญุงุฏุซุฉ
    clearChat() {
        if (confirm("ูู ุฃูุช ูุชุฃูุฏ ูู ุฑุบุจุชู ูู ูุณุญ ูุฐู ุงููุญุงุฏุซุฉุ")) {
            document.getElementById("messagesContainer").innerHTML = "";
            document.getElementById("welcomeMessage").style.display = "block";
            document.getElementById("messagesContainer").style.display = "none";
        }
    }

    exportChat() {
        const messages = document.querySelectorAll(".message");
        let exportText = "ูุญุงุฏุซุฉ ูุณุงุนุฏ ููู\n\n";

        messages.forEach((message) => {
            const isUser = message.classList.contains("user");
            const content = message.querySelector("p").textContent;
            exportText += `${isUser ? "ุฃูุช" : "ูุณุงุนุฏ ููู"}: ${content}\n\n`;
        });

        const blob = new Blob([exportText], { type: "text/plain" });
        const url = URL.createObjectURL(blob);
        const a = document.createElement("a");
        a.href = url;
        a.download = "ูุญุงุฏุซุฉ-ููู.txt";
        a.click();
        URL.revokeObjectURL(url);
    }

    shareChat() {
        if (navigator.share) {
            navigator.share({
                title: "ูุญุงุฏุซุฉ ูุณุงุนุฏ ููู",
                text: "ุดุงูุฏ ูุฐู ุงููุญุงุฏุซุฉ ุงููุซูุฑุฉ ูุน ูุณุงุนุฏ ููู!",
                url: window.location.href
            });
        } else {
            // ุจุฏูู: ูุณุฎ ุงูุฑุงุจุท
            navigator.clipboard.writeText(window.location.href);
            alert("ุชู ูุณุฎ ุฑุงุจุท ุงููุญุงุฏุซุฉ ุฅูู ุงูุญุงูุธุฉ");
        }
    }

    // ุฅุฏุงุฑุฉ ุงูููุงุฆู ุงูููุณุฏูุฉ ูููุญุงุฏุซุงุช
    toggleChatDropdown(event, chatId) {
        event.preventDefault();
        event.stopPropagation();

        console.log('๐ toggleChatDropdown ุชู ุงุณุชุฏุนุงุคูุง ูู:', chatId);

        // ุฅุบูุงู ุฌููุน ุงูููุงุฆู ุงูููุณุฏูุฉ ุงูุฃุฎุฑู
        this.closeAllChatDropdowns();

        // ุชุจุฏูู ุงููุงุฆูุฉ ุงูููุณุฏูุฉ ุงูุญุงููุฉ
        const dropdown = document.getElementById(`dropdown-${chatId}`);
        const button = event.target.closest('.btn');
        const buttonRect = button.getBoundingClientRect();

        if (dropdown.classList.contains('show')) {
            console.log('โ ุฅุบูุงู ุงููุงุฆูุฉ ุงูููุณุฏูุฉ:', chatId);
            dropdown.classList.remove('show');
        } else {
            console.log('โ ูุชุญ ุงููุงุฆูุฉ ุงูููุณุฏูุฉ:', chatId);
            // ุชุญุฏูุฏ ูููุน ุงููุงุฆูุฉ ุงูููุณุฏูุฉ
            dropdown.style.top = (buttonRect.bottom + 5) + 'px';
            dropdown.style.right = (window.innerWidth - buttonRect.right) + 'px';
            dropdown.classList.add('show');

            // ุฅุถุงูุฉ ูุนุงูุฌุงุช ุงูุฃุญุฏุงุซ ูููุงุฆูุฉ ุงูุฌุฏูุฏุฉ
            this.setupDropdownEvents(dropdown);
        }
    }

    closeAllChatDropdowns() {
        console.log('๐ closeAllChatDropdowns ุชู ุงุณุชุฏุนุงุคูุง');
        document.querySelectorAll('.chat-dropdown-menu').forEach(menu => {
            console.log('โ ุฅุบูุงู ูุงุฆูุฉ:', menu.id);
            menu.classList.remove('show');
        });
    }

    // ุฅุนุฏุงุฏ ูุนุงูุฌุงุช ุงูุฃุญุฏุงุซ ูููุงุฆูุฉ ุงูููุณุฏูุฉ
    setupDropdownEvents(dropdown) {
        let closeTimeout;

        // ุฅุบูุงู ุงููุงุฆูุฉ ุนูุฏ ุฎุฑูุฌ ุงููุงูุณ ูููุง
        dropdown.addEventListener('mouseleave', () => {
            console.log('๐ช mouseleave ูู ุงููุงุฆูุฉ ุงูุฑุฆูุณูุฉ');
            closeTimeout = setTimeout(() => {
                dropdown.classList.remove('show');
                console.log('โฐ ุชู ุฅุบูุงู ุงููุงุฆูุฉ ุงูุฑุฆูุณูุฉ');
            }, 300);
        });

        // ุฅูุบุงุก ุงูุฅุบูุงู ุนูุฏ ุนูุฏุฉ ุงููุงูุณ ูููุงุฆูุฉ
        dropdown.addEventListener('mouseenter', () => {
            console.log('๐ฑ๏ธ mouseenter ูููุงุฆูุฉ ุงูุฑุฆูุณูุฉ');
            clearTimeout(closeTimeout);
        });

        // ูุนุงูุฌุฉ ุงูููุงุฆู ุงููุฑุนูุฉ
        const submenuItems = dropdown.querySelectorAll('.chat-dropdown-submenu');
        submenuItems.forEach(submenuItem => {
            let submenuCloseTimeout;

            // ุฅุธูุงุฑ ุงููุงุฆูุฉ ุงููุฑุนูุฉ ุนูุฏ ุงููุฑูุฑ ุนูููุง
            submenuItem.addEventListener('mouseenter', () => {
                console.log('๐ฑ๏ธ mouseenter ุนูู submenu');
                clearTimeout(submenuCloseTimeout);
                const submenu = submenuItem.querySelector('.chat-dropdown-menu');
                if (submenu) {
                    // ุชุญุฏูุฏ ููุถุน ุงููุงุฆูุฉ ุงููุฑุนูุฉ
                    const parentRect = submenuItem.getBoundingClientRect();
                    const submenuWidth = 180; // ุนุฑุถ ุงููุงุฆูุฉ ุงููุฑุนูุฉ
                    const submenuHeight = submenu.scrollHeight || 200; // ุงุฑุชูุงุน ุงููุงุฆูุฉ ุงููุฑุนูุฉ

                    // ุชุญุฏูุฏ ุงูููุถุน ุงูุนููุฏู - ูุญุงุฐุงุฉ ูุน ุงูุนูุตุฑ ุงูุฃุจ
                    let topPosition = parentRect.top;

                    // ุงูุชุญูู ูู ุฃู ุงููุงุฆูุฉ ูุง ุชุฎุฑุฌ ูู ุฃุณูู ุงูุดุงุดุฉ
                    if (topPosition + submenuHeight > window.innerHeight) {
                        // ุฅุฐุง ูุงูุช ุณุชุฎุฑุฌ ูู ุฃุณูู ุงูุดุงุดุฉุ ุญุฑููุง ูุฃุนูู
                        topPosition = window.innerHeight - submenuHeight - 10; // 10px ูุณุงูุฉ ูู ุฃุณูู ุงูุดุงุดุฉ
                    }

                    // ุงูุชุญูู ูู ุฃู ุงููุงุฆูุฉ ูุง ุชุฎุฑุฌ ูู ุฃุนูู ุงูุดุงุดุฉ
                    if (topPosition < 10) {
                        topPosition = 10; // 10px ูุณุงูุฉ ูู ุฃุนูู ุงูุดุงุดุฉ
                    }

                    submenu.style.top = topPosition + 'px';

                    // ุชุญุฏูุฏ ุงูููุถุน ุงูุฃููู - ุงููุงุฆูุฉ ุงููุฑุนูุฉ ุชุธูุฑ ุนูู ุงูุฌุงูุจ ุงูุฃููู
                    let rightPosition = window.innerWidth - parentRect.right + submenuWidth + 5;

                    // ุงูุชุญูู ูู ุฃู ุงููุงุฆูุฉ ูุง ุชุฎุฑุฌ ูู ุงูุฌุงูุจ ุงูุฃููู ูู ุงูุดุงุดุฉ
                    if (rightPosition < 10) {
                        // ุฅุฐุง ูุงูุช ุณุชุฎุฑุฌ ูู ุงูุฌุงูุจ ุงูุฃูููุ ุญุฑููุง ูููุณุงุฑ
                        rightPosition = 10; // 10px ูุณุงูุฉ ูู ุงูุฌุงูุจ ุงูุฃููู
                    }

                    // ุงูุชุญูู ูู ุฃู ุงููุงุฆูุฉ ูุง ุชุฎุฑุฌ ูู ุงูุฌุงูุจ ุงูุฃูุณุฑ ูู ุงูุดุงุดุฉ
                    const leftPosition = window.innerWidth - rightPosition - submenuWidth;
                    if (leftPosition < 10) {
                        // ุฅุฐุง ูุงูุช ุณุชุฎุฑุฌ ูู ุงูุฌุงูุจ ุงูุฃูุณุฑุ ุญุฑููุง ูููููู
                        rightPosition = window.innerWidth - submenuWidth - 10; // 10px ูุณุงูุฉ ูู ุงูุฌุงูุจ ุงูุฃูุณุฑ
                    }

                    submenu.style.right = rightPosition + 'px';
                    submenu.style.left = 'auto'; // ุฅุฒุงูุฉ left

                    submenu.classList.add('show');
                    console.log('โ ุชู ุฅุธูุงุฑ ุงููุงุฆูุฉ ุงููุฑุนูุฉ ูู ุงูููุถุน:', topPosition);
                }
            });

            // ุฅุฎูุงุก ุงููุงุฆูุฉ ุงููุฑุนูุฉ ุนูุฏ ุฎุฑูุฌ ุงููุงูุณ ูููุง
            submenuItem.addEventListener('mouseleave', () => {
                console.log('๐ช mouseleave ูู submenu');
                const submenu = submenuItem.querySelector('.chat-dropdown-menu');
                if (submenu) {
                    submenuCloseTimeout = setTimeout(() => {
                        submenu.classList.remove('show');
                        console.log('โฐ ุชู ุฅุฎูุงุก ุงููุงุฆูุฉ ุงููุฑุนูุฉ');
                    }, 200);
                }
            });
        });
    }

    // ูุดุงุฑูุฉ ุนูุตุฑ ุงููุญุงุฏุซุฉ
    shareChatItem(chatId) {
        const chatItem = document.querySelector(`[onclick*="loadChat('${chatId}')"]`);
        const chatTitle = chatItem.querySelector('.chat-item-title').textContent;

        if (navigator.share) {
            navigator.share({
                title: `ูุญุงุฏุซุฉ: ${chatTitle}`,
                text: `ุดุงูุฏ ูุฐู ุงููุญุงุฏุซุฉ ุงููุซูุฑุฉ ูุน ูุณุงุนุฏ ููู!`,
                url: window.location.href
            });
        } else {
            // ุจุฏูู: ูุณุฎ ุฅูู ุงูุญุงูุธุฉ
            navigator.clipboard.writeText(`${chatTitle} - ${window.location.href}`);
            alert("ุชู ูุณุฎ ุฑุงุจุท ุงููุญุงุฏุซุฉ ุฅูู ุงูุญุงูุธุฉ");
        }

        // ุฅุบูุงู ุงููุงุฆูุฉ ุงูููุณุฏูุฉ
        document.getElementById(`dropdown-${chatId}`).classList.remove('show');
    }

    // ุฅุนุงุฏุฉ ุชุณููุฉ ุงููุญุงุฏุซุฉ
    renameChat(chatId) {
        const chatItem = document.querySelector(`[onclick*="loadChat('${chatId}')"]`);
        const titleElement = chatItem.querySelector('.chat-item-title');
        const currentTitle = titleElement.textContent;

        const newTitle = prompt("ุฃุฏุฎู ุงูุงุณู ุงูุฌุฏูุฏ ูููุญุงุฏุซุฉ:", currentTitle);
        if (newTitle && newTitle.trim() !== '') {
            titleElement.textContent = newTitle.trim();

            // ุชุญุฏูุซ ุงูุจูุงูุงุช ุงููุญููุฉ
            if (this.chats.has(chatId)) {
                this.chats.get(chatId).title = newTitle.trim();
            }
        }

        // ุฅุบูุงู ุงููุงุฆูุฉ ุงูููุณุฏูุฉ
        document.getElementById(`dropdown-${chatId}`).classList.remove('show');
    }

    // ุฅุถุงูุฉ ุฅูู ูุฌูุฏ
    addToFolder(chatId, folderType) {
        const chatItem = document.querySelector(`[onclick*="loadChat('${chatId}')"]`);
        const chatTitle = chatItem.querySelector('.chat-item-title').textContent;

        if (folderType === 'new') {
            // ุชุฎุฒูู ูุนูููุงุช ุงููุญุงุฏุซุฉ ููุงุณุชุฎุฏุงู ูุงุญูุงู
            window.pendingChatForNewFolder = {
                chatId: chatId,
                chatTitle: chatTitle
            };

            // ูุณุญ ุงููููุฐุฌ ูุฅุธูุงุฑ ุงููุงูุฐุฉ ุงูููุจุซูุฉ
            document.getElementById('folderName').value = '';
            document.getElementById('folderIcon').value = 'fa-duotone fa-folder';

            const modal = new bootstrap.Modal(document.getElementById('addFolderModal'));
            modal.show();

            // ุฅุบูุงู ูุงุฆูุฉ ุงููุญุงุฏุซุฉ ุงูููุณุฏูุฉ
            document.getElementById(`dropdown-${chatId}`).classList.remove('show');
        } else {
            const folderNames = {
                'programming': 'ุงูุจุฑูุฌุฉ',
                'datastructures': 'ููุงูู ุงูุจูุงูุงุช',
                'algorithms': 'ุงูุฎูุงุฑุฒููุงุช',
                'databases': 'ููุงุนุฏ ุงูุจูุงูุงุช',
                'academic': 'ุงูุดุคูู ุงูุฃูุงุฏูููุฉ'
            };

            // ุงูุญุตูู ุนูู ุงุณู ุงููุฌูุฏ ุฏููุงููููุงู ูููุฌูุฏุงุช ุงููุฎุตุตุฉ
            if (folderType.startsWith('folder-')) {
                const folderItem = document.querySelector(`[onclick*="openFolder('${folderType}')"]`);
                if (folderItem) {
                    folderNames[folderType] = folderItem.querySelector('.folder-name').textContent;
                }
            }

            // ุชุญุฏูุซ ุนุฏุฏ ุงููุญุงุฏุซุงุช ูู ุงููุฌูุฏ
            const folderItem = document.querySelector(`[onclick*="openFolder('${folderType}')"]`);
            if (folderItem) {
                const countElement = folderItem.querySelector('.folder-count');
                const currentText = countElement.textContent;
                const currentCount = parseInt(currentText.match(/\d+/)[0]) || 0;
                countElement.textContent = `${currentCount + 1} ูุญุงุฏุซุฉ`;
            }

            alert(`ุชู ุฅุถุงูุฉ ุงููุญุงุฏุซุฉ "${chatTitle}" ุฅูู ูุฌูุฏ "${folderNames[folderType]}"`);
        }

        // ุฅุบูุงู ุงููุงุฆูุฉ ุงูููุณุฏูุฉ
        document.getElementById(`dropdown-${chatId}`).classList.remove('show');
    }

    // ุฃุฑุดูุฉ ุงููุญุงุฏุซุฉ
    archiveChat(chatId) {
        const chatItem = document.querySelector(`[onclick*="loadChat('${chatId}')"]`);
        const chatTitle = chatItem.querySelector('.chat-item-title').textContent;

        if (confirm(`ูู ุฃูุช ูุชุฃูุฏ ูู ุฑุบุจุชู ูู ุฃุฑุดูุฉ ุงููุญุงุฏุซุฉ "${chatTitle}"ุ`)) {
            chatItem.style.opacity = '0.5';
            chatItem.style.backgroundColor = 'var(--bs-gray-100)';
            alert(`ุชู ุฃุฑุดูุฉ ุงููุญุงุฏุซุฉ "${chatTitle}"`);
        }

        // ุฅุบูุงู ุงููุงุฆูุฉ ุงูููุณุฏูุฉ
        document.getElementById(`dropdown-${chatId}`).classList.remove('show');
    }

    // ุญุฐู ุงููุญุงุฏุซุฉ
    deleteChat(event, chatId) {
        event.preventDefault();
        event.stopPropagation();

        const chatItem = event.target.closest(".chat-item");
        const chatTitle = chatItem.querySelector('.chat-item-title').textContent;

        if (confirm(`ูู ุฃูุช ูุชุฃูุฏ ูู ุฑุบุจุชู ูู ุญุฐู ุงููุญุงุฏุซุฉ "${chatTitle}"ุ`)) {
            chatItem.remove();
            this.chats.delete(chatId);
        }

        // ุฅุบูุงู ุงููุงุฆูุฉ ุงูููุณุฏูุฉ
        document.getElementById(`dropdown-${chatId}`).classList.remove('show');
    }

    // ุฅุฌุฑุงุกุงุช ุงูุฅุฏุฎุงู
    attachFile() {
        const input = document.createElement("input");
        input.type = "file";
        input.accept = ".pdf,.doc,.docx,.txt,.jpg,.png";
        input.onchange = (e) => {
            const file = e.target.files[0];
            if (file) {
                this.addMessage(`ุชู ุฅุฑูุงู ุงูููู: ${file.name}`, true);
            }
        };
        input.click();
    }

    recordVoice() {
        alert("ุณูุชู ุชูุนูู ุงูุชุณุฌูู ุงูุตูุชู ูุฑูุจุงู");
    }

    // ุชุญุฑูุฑ ุฑุณุงูุฉ ุงููุณุชุฎุฏู
    editMessage(button) {
        const messageElement = button.closest(".message");
        const messageContent = messageElement.querySelector(".message-content p");
        
        if (!messageContent) {
            console.error('ูู ูุชู ุงูุนุซูุฑ ุนูู ูุญุชูู ุงูุฑุณุงูุฉ');
            return;
        }

        const currentText = messageContent.textContent || messageContent.innerText || '';
        
        // ุฅูุดุงุก ุนูุตุฑ ุงูุฅุฏุฎุงู ููุชุญุฑูุฑ
        const editInput = document.createElement('textarea');
        editInput.className = 'form-control edit-input';
        editInput.value = currentText;
        editInput.rows = Math.max(2, currentText.split('\n').length);
        editInput.style.resize = 'vertical';
        editInput.style.minHeight = '60px';
        
        // ุญูุธ ุงูุนูุตุฑ ุงูุฃุตูู
        const originalContent = messageContent.outerHTML;
        
        // ุงุณุชุจุฏุงู ุงููุญุชูู ุจุนูุตุฑ ุงูุฅุฏุฎุงู
        messageContent.parentNode.replaceChild(editInput, messageContent);
        
        // ุงูุชุฑููุฒ ุนูู ุญูู ุงูุฅุฏุฎุงู
        editInput.focus();
        editInput.select();
        
        // ุฅุถุงูุฉ ุฃุฒุฑุงุฑ ุงูุฅุฌุฑุงุกุงุช
        const actionsDiv = messageElement.querySelector('.message-actions');
        if (actionsDiv) {
            const saveBtn = document.createElement('button');
            saveBtn.className = 'btn btn-success btn-sm me-2';
            saveBtn.innerHTML = '<i class="fa-regular fa-check me-1"></i>ุญูุธ';
            saveBtn.onclick = () => this.saveEditedMessage(editInput, messageElement, actionsDiv);
            
            const cancelBtn = document.createElement('button');
            cancelBtn.className = 'btn btn-secondary btn-sm';
            cancelBtn.innerHTML = '<i class="fa-regular fa-times me-1"></i>ุฅูุบุงุก';
            cancelBtn.onclick = () => this.cancelEdit(originalContent, messageElement, actionsDiv);
            
            // ุฅุฎูุงุก ุงูุฃุฒุฑุงุฑ ุงูุฃุตููุฉ ูุคูุชุงู
            actionsDiv.style.display = 'none';
            
            // ุฅุถุงูุฉ ุงูุฃุฒุฑุงุฑ ุงูุฌุฏูุฏุฉ
            const editActionsDiv = document.createElement('div');
            editActionsDiv.className = 'message-actions edit-actions';
            editActionsDiv.style.position = 'absolute';
            editActionsDiv.style.top = '-0.5rem';
            editActionsDiv.style.right = '0.5rem';
            editActionsDiv.style.background = 'var(--bs-body-bg)';
            editActionsDiv.style.border = '1px solid var(--bs-gray-200)';
            editActionsDiv.style.borderRadius = '0.5rem';
            editActionsDiv.style.padding = '0.5rem';
            editActionsDiv.style.boxShadow = '0 0.125rem 0.25rem rgba(0, 0, 0, 0.075)';
            editActionsDiv.style.zIndex = '10';
            editActionsDiv.style.display = 'flex';
            editActionsDiv.style.gap = '0.5rem';
            editActionsDiv.appendChild(saveBtn);
            editActionsDiv.appendChild(cancelBtn);
            
            messageElement.querySelector('.message-content').appendChild(editActionsDiv);
        }
        
        // ุญูุธ ุงูุชุบููุฑุงุช ุนูุฏ ุงูุถุบุท ุนูู Enter
        editInput.addEventListener('keydown', (e) => {
            if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                this.saveEditedMessage(editInput, messageElement, actionsDiv);
            } else if (e.key === 'Escape') {
                e.preventDefault();
                this.cancelEdit(originalContent, messageElement, actionsDiv);
            }
        });
    }

    // ุญูุธ ุงูุฑุณุงูุฉ ุงููุญุฑุฑุฉ
    saveEditedMessage(editInput, messageElement, originalActionsDiv) {
        const newText = editInput.value.trim();
        
        if (!newText) {
            alert('ูุง ูููู ุชุฑู ุงูุฑุณุงูุฉ ูุงุฑุบุฉ');
            return;
        }
        
        // ุฅูุดุงุก ุนูุตุฑ ุงููุญุชูู ุงูุฌุฏูุฏ
        const newContent = document.createElement('p');
        newContent.className = 'mb-0';
        newContent.textContent = newText;
        
        // ุงุณุชุจุฏุงู ุญูู ุงูุฅุฏุฎุงู ุจุงููุญุชูู ุงูุฌุฏูุฏ
        editInput.parentNode.replaceChild(newContent, editInput);
        
        // ุฅุฒุงูุฉ ุฃุฒุฑุงุฑ ุงูุชุญุฑูุฑ
        const editActionsDiv = messageElement.querySelector('.edit-actions');
        if (editActionsDiv) {
            editActionsDiv.remove();
        }
        
        // ุฅุธูุงุฑ ุงูุฃุฒุฑุงุฑ ุงูุฃุตููุฉ ูุฑุฉ ุฃุฎุฑู
        if (originalActionsDiv) {
            originalActionsDiv.style.display = 'flex';
        }
        
        // ุฅุธูุงุฑ ุฑุณุงูุฉ ูุฌุงุญ
        this.showEditSuccess(messageElement);
        
        // ุชูุฑูุฑ ุฅูู ุฃุณูู
        this.scrollToBottom();
    }

    // ุฅูุบุงุก ุงูุชุญุฑูุฑ
    cancelEdit(originalContent, messageElement, originalActionsDiv) {
        // ุงุณุชุนุงุฏุฉ ุงููุญุชูู ุงูุฃุตูู
        const editInput = messageElement.querySelector('.edit-input');
        if (editInput) {
            editInput.outerHTML = originalContent;
        }
        
        // ุฅุฒุงูุฉ ุฃุฒุฑุงุฑ ุงูุชุญุฑูุฑ
        const editActionsDiv = messageElement.querySelector('.edit-actions');
        if (editActionsDiv) {
            editActionsDiv.remove();
        }
        
        // ุฅุธูุงุฑ ุงูุฃุฒุฑุงุฑ ุงูุฃุตููุฉ ูุฑุฉ ุฃุฎุฑู
        if (originalActionsDiv) {
            originalActionsDiv.style.display = 'flex';
        }
    }

    // ุฅุธูุงุฑ ุฑุณุงูุฉ ูุฌุงุญ ุงูุชุญุฑูุฑ
    showEditSuccess(messageElement) {
        const messageContent = messageElement.querySelector('.message-content p');
        if (!messageContent) return;
        
        const originalText = messageContent.textContent;
        const originalColor = messageContent.style.color;
        
        messageContent.textContent = 'ุชู ุญูุธ ุงูุชุนุฏููุงุช ุจูุฌุงุญ!';
        messageContent.style.color = 'var(--bs-success)';
        messageContent.style.fontWeight = 'bold';
        
        setTimeout(() => {
            messageContent.textContent = originalText;
            messageContent.style.color = originalColor;
            messageContent.style.fontWeight = '';
        }, 2000);
    }
}

// ุฅูุดุงุก ูุซูู ูุฏูุฑ ุงููุญุงุฏุซุงุช
const chatManager = new ChatManager();

// ุชุตุฏูุฑ ุงูุฏูุงู ููุงุณุชุฎุฏุงู ุงูุนุงู
window.chatManager = chatManager;

console.log('โ ูุธุงู ุฅุฏุงุฑุฉ ุงููุญุงุฏุซุงุช ุชู ุชุญูููู ุจูุฌุงุญ!'); 